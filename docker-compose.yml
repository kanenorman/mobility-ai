version: '3'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    networks:
      - network
    container_name: zookeeper
    ports:
      - "${ZOOKEEPER_PORT}:${ZOOKEEPER_PORT}"
    environment:
      ZOOKEEPER_CLIENT_PORT: "${ZOOKEEPER_PORT}"
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    networks:
      - network
    hostname: kafka
    ports:
      - "${KAFKA_PORT}:${KAFKA_PORT}"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:${ZOOKEEPER_PORT}"
      KAFKA_LISTENERS: "INTERNAL://${KAFKA_HOST}:${KAFKA_PORT}"
      KAFKA_ADVERTISED_LISTENERS: "INTERNAL://${KAFKA_HOST}:${KAFKA_PORT}"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "INTERNAL:PLAINTEXT"
      KAFKA_INTER_BROKER_LISTENER_NAME: "INTERNAL"
    depends_on:
      - zookeeper

  producer:
    container_name: producer
    networks:
      - network
    build:
      context: .
      dockerfile: ./data_streaming/kafka_producer/Dockerfile
    environment:
      KAFKA_HOST: "${KAFKA_HOST}"
      KAFKA_PORT: "${KAFKA_PORT}"
      SCHEDULES_INPUT_TOPIC: "${SCHEDULES_INPUT_TOPIC}"
      MBTA_API_KEY: "${MBTA_API_KEY}"
      PYTHONUNBUFFERED: 1
    depends_on:
      - kafka
  
  flask_app:
    container_name: flask_app
    build:
      context: .
      dockerfile: ./flask_app/Dockerfile
    ports:
      - "4000:4000"
    environment:
      - DEV_POSTGRES_URI="${DEV_POSTGRES_URI}"
    depends_on:
      - flask_database
 
  flask_database:
    container_name: flask_database
    image: postgres:15
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_PASSWORD="${POSTGRES_PASSWORD}"
      - POSTGRES_USER="${POSTGRES_USER}"
      - POSTGRES_DB="${POSTGRES_DB}"
    volumes:
      - pgdata:/var/lib/postgresql/data


volumes:
  pgdata: {}

networks:
  network:
